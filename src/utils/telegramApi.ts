interface OrderData {
  name: string;
  phone: string;
  instagram: string;
  comment?: string;
  total: number;
  items: Array<{
    name: string;
    size: string;
    quantity: number;
    price: number;
  }>;
}

export const sendOrderToTelegram = async (orderData: OrderData): Promise<boolean> => {
  const TELEGRAM_BOT_TOKEN = '8000270765:AAG93gqHnrPwnQgkC0xVd3FCSvylftogxZM';
  const CHAT_ID = '-1002375665181';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  let message = `üÜï –ù–û–í–ò–ô –ó–ê–ú–û–í–õ–ï–ù–ù–Ø\n\n`;
  message += `üë§ –Ü–º'—è: ${orderData.name}\n`;
  message += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.phone}\n`;
  message += `üì∑ Instagram: ${orderData.instagram}\n`;
  
  if (orderData.comment) {
    message += `üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: ${orderData.comment}\n`;
  }
  
  message += `\nüì¶ –¢–û–í–ê–†–ò:\n`;
  
  orderData.items.forEach((item, index) => {
    message += `${index + 1}. ${item.name}\n`;
    message += `   –†–æ–∑–º—ñ—Ä: ${item.size}\n`;
    message += `   –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${item.quantity}\n`;
    message += `   –¶—ñ–Ω–∞: ${item.price} ‚Ç¥\n\n`;
  });
  
  message += `üí∞ –ó–ê–ì–ê–õ–¨–ù–ê –°–£–ú–ê: ${orderData.total} ‚Ç¥`;

  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      }),
    });

    const result = await response.json();
    
    if (!response.ok) {
      console.error('Telegram API error:', result);
      return false;
    }

    console.log('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram:', result);
    return true;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
    return false;
  }
}; 