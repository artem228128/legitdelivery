export default async function handler(req, res) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { name, phone, instagram, comment, total, items } = req.body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!name || !phone || !instagram) {
      return res.status(400).json({ error: 'Missing required fields' });
    }

    const TELEGRAM_BOT_TOKEN = '8000270765:AAG93gqHnrPwnQgkC0xVd3FCSvylftogxZM';
    const CHAT_ID = '-1002375665181';

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    let message = `üÜï –ù–û–í–ò–ô –ó–ê–ú–û–í–õ–ï–ù–ù–Ø\n\n`;
    message += `üë§ –Ü–º'—è: ${name}\n`;
    message += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n`;
    message += `üì∑ Instagram: ${instagram}\n`;
    
    if (comment) {
      message += `üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: ${comment}\n`;
    }
    
    message += `\nüì¶ –¢–û–í–ê–†–ò:\n`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
    if (items && items.length > 0) {
      items.forEach((item, index) => {
        message += `${index + 1}. ${item.name}\n`;
        message += `   –†–æ–∑–º—ñ—Ä: ${item.size}\n`;
        message += `   –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${item.quantity}\n`;
        message += `   –¶—ñ–Ω–∞: ${item.price} ‚Ç¥\n\n`;
      });
    }
    
    message += `üí∞ –ó–ê–ì–ê–õ–¨–ù–ê –°–£–ú–ê: ${total} ‚Ç¥`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      }),
    });

    const telegramData = await telegramResponse.json();

    if (!telegramResponse.ok) {
      console.error('Telegram API error:', telegramData);
      return res.status(500).json({ error: 'Failed to send message to Telegram' });
    }

    // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    return res.status(200).json({ 
      success: true, 
      message: 'Order sent successfully',
      telegramMessageId: telegramData.result.message_id
    });

  } catch (error) {
    console.error('Server error:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
} 