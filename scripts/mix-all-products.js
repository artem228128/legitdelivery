const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å JSON —Ñ–∞–π–ª–∞–º–∏
const PRODUCTS_DIR = path.join(__dirname, '../src/products_jsons');
const OUTPUT_FILE = path.join(PRODUCTS_DIR, 'all_products_mixed.json');

// –í–°–ï —Ñ–∞–π–ª—ã —Å –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π
const ALL_PRODUCT_FILES = [
  'aj1_products.json',
  'aj1h_products.json', 
  'aj1m_products.json',
  'aj3_products.json',
  'aj5_products.json',
  'air95_products.json',
  'air_force_1_products.json',
  'air_jordan_4_products.json',
  'airmax1_products.json',
  'custom_sneakers.json',
  'dunk_products_final.json',
  'forum_products.json',
  'gazel_products.json',
  'new_balance_products.json',
  'off_white_products.json',
  'samba_products.json',
  'spezial_products.json',
  'vomero5_products.json',
  'yeezy_products.json'
];

function shuffleArray(array) {
  const shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
}

function mixAllProducts() {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞—é —Å–º–µ—à–∏–≤–∞–Ω–∏–µ –í–°–ï–• —Ç–æ–≤–∞—Ä–æ–≤...');
  
  let allProducts = [];
  let totalFiles = 0;
  let totalProducts = 0;
  
  ALL_PRODUCT_FILES.forEach(filename => {
    const filePath = path.join(PRODUCTS_DIR, filename);
    
    try {
      if (fs.existsSync(filePath)) {
        console.log(`üì¶ –ó–∞–≥—Ä—É–∂–∞—é –í–°–ï —Ç–æ–≤–∞—Ä—ã –∏–∑ ${filename}...`);
        const products = JSON.parse(fs.readFileSync(filePath, 'utf8'));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
        const categoryName = filename.replace('_products.json', '').replace('_final', '');
        products.forEach(product => {
          product.category = categoryName;
          product.source_file = filename;
        });
        
        allProducts = allProducts.concat(products);
        totalFiles++;
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ${filename}`);
        totalProducts += products.length;
      } else {
        console.log(`‚ö†Ô∏è  –§–∞–π–ª ${filename} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${filename}:`, error.message);
    }
  });
  
  console.log(`\nüìä –ò—Ç–æ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${totalProducts} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ${totalFiles} —Ñ–∞–π–ª–æ–≤`);
  
  // –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
  console.log('üîÄ –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ...');
  const finalMix = shuffleArray(allProducts);
  
  // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID
  finalMix.forEach((product, index) => {
    product.global_id = index + 1;
    product.mixed_at = new Date().toISOString();
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è—é —Ñ–∞–π–ª...');
  fs.writeFileSync(OUTPUT_FILE, JSON.stringify(finalMix, null, 2));
  
  console.log(`üéâ –ì–û–¢–û–í–û! –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å–æ –í–°–ï–ú–ò ${finalMix.length} —Ç–æ–≤–∞—Ä–∞–º–∏`);
  console.log(`üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${OUTPUT_FILE}`);
  console.log(`üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(fs.statSync(OUTPUT_FILE).size / 1024 / 1024).toFixed(2)} MB`);
  
  // –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const categories = {};
  const brands = {};
  
  finalMix.forEach(product => {
    // –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    categories[product.category] = (categories[product.category] || 0) + 1;
    
    // –ü–æ –±—Ä–µ–Ω–¥–∞–º
    const brand = product.brand || 'Unknown';
    brands[brand] = (brands[brand] || 0) + 1;
  });
  
  console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
  Object.entries(categories)
    .sort(([,a], [,b]) => b - a)
    .forEach(([category, count]) => {
      console.log(`   ${category}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
    });
    
  console.log('\nüè∑Ô∏è  –¢–æ–ø-10 –±—Ä–µ–Ω–¥–æ–≤:');
  Object.entries(brands)
    .sort(([,a], [,b]) => b - a)
    .slice(0, 10)
    .forEach(([brand, count]) => {
      console.log(`   ${brand}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
    });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
mixAllProducts(); 