const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º
const PRODUCTS_DIR = path.join(__dirname, '../src/products_jsons');
const INPUT_FILE = path.join(PRODUCTS_DIR, 'mixed_products.json');
const OUTPUT_FILE = path.join(PRODUCTS_DIR, 'featured_mix.json');

// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –º–∏–∫—Å–µ
const FEATURED_COUNT = 100;

function createFeaturedMix() {
  console.log('üåü –°–æ–∑–¥–∞—é Featured Mix...');
  
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–π –º–∏–∫—Å
    const allProducts = JSON.parse(fs.readFileSync(INPUT_FILE, 'utf8'));
    console.log(`üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allProducts.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏)
    const featured = allProducts
      .filter(product => {
        // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ç–±–æ—Ä–∞:
        const hasImages = product.images && product.images.length >= 3;
        const hasValidPrice = product.price && !product.price.includes('$0');
        const hasTitle = product.title && product.title.length > 10;
        
        return hasImages && hasValidPrice && hasTitle;
      })
      .slice(0, FEATURED_COUNT);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫–∏ featured
    featured.forEach((product, index) => {
      product.featured_id = index + 1;
      product.is_featured = true;
      product.featured_at = new Date().toISOString();
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    fs.writeFileSync(OUTPUT_FILE, JSON.stringify(featured, null, 2));
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω Featured Mix —Å ${featured.length} —Ç–æ–≤–∞—Ä–∞–º–∏`);
    console.log(`üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${OUTPUT_FILE}`);
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º
    const brands = {};
    featured.forEach(product => {
      const brand = product.brand || 'Unknown';
      brands[brand] = (brands[brand] || 0) + 1;
    });
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º:');
    Object.entries(brands)
      .sort(([,a], [,b]) => b - a)
      .forEach(([brand, count]) => {
        console.log(`   ${brand}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
      });
      
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
createFeaturedMix(); 